@{
    int total = 0;
}
@if (Session["carrito"] != null)
{
    foreach (var item in Session["carrito"] as List<Negocio.Objetos.ItemCarrito>)
    {

        total++;
    }
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Hotel Jamaica</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script src="https://kit.fontawesome.com/2e5e0a18c3.js" crossorigin="anonymous"></script>
</head>
<style>
    .dropright:hover .dropdown-menu {
        display: block;
        margin-top: 0;
    }
</style>

<body>
    @if (User.Identity.IsAuthenticated)
    {


        <nav class="navbar navbar-expand-lg navbar-dark bg-primary fixed-top" id="sideNav">
            <a class="navbar-brand js-scroll-trigger">
                <span class="d-none d-lg-block">
                    <img class="img-fluid img-profile rounded-circle mx-auto mb-2" src="@Url.Content("~/Content/img/logo.png")" alt="">
                </span>
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav">
                    <li class="nav-item dropright">

                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Registro
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            @Html.ActionLink("Clientes", "Index", "Cliente", new { }, new { @class = "dropdown-item" })
                     
                        </div>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" href="/Habitacion/Available"><i class="fas fa-bed"></i> Reservar</a>
                    </li>
                    <li class="nav-item dropright">

                        <a class="nav-link js-scroll-trigger  dropdown-toggle" href='@Url.Action("AgregarCarrito","Home")'>
                            <i class="fas fa-shopping-cart">
                                <span class="badge badge-success">@total</span>
                            </i>
                        </a>
                    </li>
                    <li class="nav-item dropright">

                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Mantenimiento
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            @Html.ActionLink("Habitaciones", "Index", "Habitacion", new { }, new { @class = "dropdown-item" })
                            <div class="dropdown-divider"></div>
                            @Html.ActionLink("Pisos", "Index", "Piso", new { }, new { @class = "dropdown-item" })
                            @Html.ActionLink("Categoria", "Index", "Categoria", new { }, new { @class = "dropdown-item" })
                        </div>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" href="/Expired/Index">Reporte</a>
                    </li>
                    <li class="nav-item">
                        @Html.ActionLink("Logout", "Logout", "Home", new { }, new { @class = "nav-link" })
                    </li>
                </ul>
            </div>
        </nav>
    }
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Hotel Jamaica</p>
        </footer>

    </div>
    @Scripts.Render("~/bundles/jquery")
    <script>
        $(document).ready(function () {
            var factual = new Date();
            var timer = setTimeout(function () {
                       $.ajax({
                            url: "@Url.Action("Lista", "Expired")",
                            type: "GET",
                            dataType: 'JSON',
                            success: function (response) {
                                $.each(response, function (index, element) {
                                    var datetime = element.fecha_salida.substring(6, 19);
                                    var d = new Date();
                                    d.setTime(datetime)
                                    Push.create("Reserva ID:" + element.res_id, {
                                        body: "Fecha Vencimiento: " + d.toLocaleDateString() + "\n" + "Habitacion: " + element.fk_num_habi + "\n" + "Cliente: " + element.dni_clientes,
                                        icon: '/Content/img/information.png',
                                        requireInteraction: true,
                                        timeout:3600000,
                                        onClick: function () {
                                            window.focus;
                                            window.location.href = "/Habitacion/Index";
                                        }
                                    });
                                })
                            },
                            error: function (xhr, error) {
                                        alert(error);
                            }
                });

            }, HoraInicio());


            if (factual.getTime() > HoraFin()) {
                clearTimeout(timer);
            }

            function HoraInicio() {
                horaActual = new Date();
                horaProgramada = new Date();
                horaProgramada.setHours(17);
                horaProgramada.setMinutes(44);
                horaProgramada.setSeconds(0);
                return horaProgramada.getTime() - horaActual.getTime();
            }
            function HoraFin() {

                horaProgramadafin = new Date();
                horaProgramadafin.setHours(17);
                horaProgramadafin.setMinutes(44);
                horaProgramadafin.setSeconds(2);
                return horaProgramadafin.getTime();
            }
        });

    </script>
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>

